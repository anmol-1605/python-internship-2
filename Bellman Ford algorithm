class GraphBellmanFord:
    def __init__(self, vertices):
        self.V = vertices
        self.edges = []

    def add_edge(self, u, v, weight):
        self.edges.append((u, v, weight))

    def bellman_ford(self, src):
        dist = [float('inf')] * self.V
        dist[src] = 0

        for _ in range(self.V - 1):
            for u, v, weight in self.edges:
                if dist[u] + weight < dist[v]:
                    dist[v] = dist[u] + weight

        print(dist)

g = GraphBellmanFord(5)
g.add_edge(0, 1, 10)
g.add_edge(1, 2, 20)
g.add_edge(2, 3, 30)
g.add_edge(3, 4, 40)
g.bellman_ford(0)
